{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sgstu\\\\multi-step-form_assignment\\\\src\\\\components\\\\StepOne.jsx\";\nimport React from 'react';\nimport InfoIcon from '@material-ui/icons/Info';\nimport '../Style/StepOne.css';\nimport CheckBox from './CheckBox';\nimport ChannelType from './ChannelType';\n\nclass StepOne extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isChannelTypeChecked: [{\n        type: 'In App',\n        value: false\n      }, {\n        type: 'Mobile Web',\n        value: false\n      }, {\n        type: 'Desktop',\n        value: false\n      }, {\n        type: 'Social Media',\n        value: false\n      }, {\n        type: 'Paid Search',\n        value: false\n      }, {\n        type: 'Email',\n        value: false\n      }, {\n        type: 'Lead Form',\n        value: false\n      }, {\n        type: 'Landing Page',\n        value: false\n      }],\n      isTrackingOptionChecked: [{\n        type: 'Visits',\n        value: false\n      }, {\n        type: 'Transactions',\n        value: false\n      }]\n    };\n\n    this.componentDidMount = () => {\n      this.setState({\n        isChannelTypeChecked: this.props.channelType\n      });\n      this.setState({\n        isTrackingOptionChecked: this.props.trackingOption\n      });\n    };\n\n    this.gotoNextStep = event => {\n      event.preventDefault();\n      this.props.nextStep();\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(InfoIcon, {\n      color: \"primary\",\n      style: {\n        fontSize: 30,\n        position: 'relative',\n        top: 10,\n        right: 5\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }), \"Select the channel of your campaign\"), React.createElement(\"div\", {\n      className: \"flex-container-camp\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(ChannelType, {\n      iconType: \"Digital\",\n      text: \"Digital\",\n      selectedChannel: this.props.channel,\n      onChangeChannel: this.props.onChangeChannel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }), React.createElement(ChannelType, {\n      iconType: \"OutOfHome\",\n      text: \"Out Of Home\",\n      selectedChannel: this.props.channel,\n      onChangeChannel: this.props.onChangeChannel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }), React.createElement(ChannelType, {\n      iconType: \"TV\",\n      text: \"TV\",\n      selectedChannel: this.props.channel,\n      onChangeChannel: this.props.onChangeChannel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }), React.createElement(ChannelType, {\n      iconType: \"Radio\",\n      text: \"Radio\",\n      selectedChannel: this.props.channel,\n      onChangeChannel: this.props.onChangeChannel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    })), React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"TYPE(S) OF CHANNEL\"), React.createElement(\"div\", {\n      className: \"flex-container-channel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(CheckBox, {\n      label: \"In App\",\n      itemType: \"channel\",\n      checkedChannelValue: this.state.isChannelTypeChecked[0].value,\n      onChangeChannelType: this.props.onChangeChannelType,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }), React.createElement(CheckBox, {\n      label: \"Mobile Web\",\n      itemType: \"channel\",\n      checkedChannelValue: this.state.isChannelTypeChecked[1].value,\n      onChangeChannelType: this.props.onChangeChannelType,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), React.createElement(CheckBox, {\n      label: \"Desktop\",\n      itemType: \"channel\",\n      checkedChannelValue: this.state.isChannelTypeChecked[2].value,\n      onChangeChannelType: this.props.onChangeChannelType,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), React.createElement(CheckBox, {\n      label: \"Social Media\",\n      itemType: \"channel\",\n      checkedChannelValue: this.state.isChannelTypeChecked[3].value,\n      onChangeChannelType: this.props.onChangeChannelType,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"flex-container-channel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(CheckBox, {\n      label: \"Paid Search\",\n      itemType: \"channel\",\n      checkedChannelValue: this.state.isChannelTypeChecked[4].value,\n      onChangeChannelType: this.props.onChangeChannelType,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }), React.createElement(CheckBox, {\n      label: \"Email\",\n      itemType: \"channel\",\n      checkedChannelValue: this.state.isChannelTypeChecked[5].value,\n      onChangeChannelType: this.props.onChangeChannelType,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }), React.createElement(CheckBox, {\n      label: \"Lead Form\",\n      itemType: \"channel\",\n      checkedChannelValue: this.state.isChannelTypeChecked[6].value,\n      onChangeChannelType: this.props.onChangeChannelType,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), React.createElement(CheckBox, {\n      label: \"Landing Page\",\n      itemType: \"channel\",\n      checkedChannelValue: this.state.isChannelTypeChecked[7].value,\n      onChangeChannelType: this.props.onChangeChannelType,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    })), React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"TRACKING OPTIONS\"), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"Attribution Type\"), React.createElement(\"div\", {\n      className: \"flex-container-channel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(CheckBox, {\n      label: \"Visits\",\n      itemType: \"attribution\",\n      checkedChannelValue: this.state.isTrackingOptionChecked[0].value,\n      onChangeChannelType: this.props.onChangeChannelType,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), React.createElement(CheckBox, {\n      label: \"Transactions\",\n      itemType: \"attribution\",\n      checkedChannelValue: this.state.isTrackingOptionChecked[1].value,\n      onChangeChannelType: this.props.onChangeChannelType,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    })), React.createElement(\"footer\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"ui primary right floated button\",\n      onClick: this.gotoNextStep,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"Next >\")));\n  }\n\n}\n\nexport default StepOne;","map":{"version":3,"sources":["C:/Users/sgstu/multi-step-form_assignment/src/components/StepOne.jsx"],"names":["React","InfoIcon","CheckBox","ChannelType","StepOne","Component","state","isChannelTypeChecked","type","value","isTrackingOptionChecked","componentDidMount","setState","props","channelType","trackingOption","gotoNextStep","event","preventDefault","nextStep","render","fontSize","position","top","right","channel","onChangeChannel","onChangeChannelType"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport '../Style/StepOne.css'\r\nimport CheckBox from './CheckBox';\r\nimport ChannelType from './ChannelType';\r\n\r\nclass StepOne extends React.Component {\r\n    state = {\r\n        isChannelTypeChecked: [\r\n            { type: 'In App', value: false },\r\n            { type: 'Mobile Web', value: false },\r\n            { type: 'Desktop', value: false },\r\n            { type: 'Social Media', value: false },\r\n            { type: 'Paid Search', value: false },\r\n            { type: 'Email', value: false },\r\n            { type: 'Lead Form', value: false },\r\n            { type: 'Landing Page', value: false }\r\n        ],\r\n        isTrackingOptionChecked: [\r\n            { type: 'Visits', value: false },\r\n            { type: 'Transactions', value: false }\r\n        ]\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.setState({ isChannelTypeChecked: this.props.channelType });\r\n        this.setState({ isTrackingOptionChecked: this.props.trackingOption });\r\n    }\r\n\r\n    gotoNextStep = (event) => {\r\n        event.preventDefault();\r\n        this.props.nextStep();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h4>\r\n                    <InfoIcon color='primary' style={{ fontSize: 30, position: 'relative', top: 10, right: 5 }} />\r\n                    Select the channel of your campaign\r\n                </h4>\r\n                <div className=\"flex-container-camp\">\r\n                    <ChannelType iconType='Digital' text='Digital' selectedChannel={this.props.channel} onChangeChannel={this.props.onChangeChannel} />\r\n                    <ChannelType iconType='OutOfHome' text='Out Of Home' selectedChannel={this.props.channel} onChangeChannel={this.props.onChangeChannel} />\r\n                    <ChannelType iconType='TV' text='TV' selectedChannel={this.props.channel} onChangeChannel={this.props.onChangeChannel} />\r\n                    <ChannelType iconType='Radio' text='Radio' selectedChannel={this.props.channel} onChangeChannel={this.props.onChangeChannel} />\r\n                </div>\r\n                <h4>TYPE(S) OF CHANNEL</h4>\r\n                <div className=\"flex-container-channel\">\r\n                    <CheckBox label=\"In App\" itemType=\"channel\" checkedChannelValue={this.state.isChannelTypeChecked[0].value} onChangeChannelType={this.props.onChangeChannelType}></CheckBox>\r\n                    <CheckBox label=\"Mobile Web\" itemType=\"channel\" checkedChannelValue={this.state.isChannelTypeChecked[1].value} onChangeChannelType={this.props.onChangeChannelType}></CheckBox>\r\n                    <CheckBox label=\"Desktop\" itemType=\"channel\" checkedChannelValue={this.state.isChannelTypeChecked[2].value} onChangeChannelType={this.props.onChangeChannelType}></CheckBox>\r\n                    <CheckBox label=\"Social Media\" itemType=\"channel\" checkedChannelValue={this.state.isChannelTypeChecked[3].value} onChangeChannelType={this.props.onChangeChannelType}></CheckBox>\r\n                </div>\r\n                <div className=\"flex-container-channel\">\r\n                    <CheckBox label=\"Paid Search\" itemType=\"channel\" checkedChannelValue={this.state.isChannelTypeChecked[4].value} onChangeChannelType={this.props.onChangeChannelType}></CheckBox>\r\n                    <CheckBox label=\"Email\" itemType=\"channel\" checkedChannelValue={this.state.isChannelTypeChecked[5].value} onChangeChannelType={this.props.onChangeChannelType}></CheckBox>\r\n                    <CheckBox label=\"Lead Form\" itemType=\"channel\" checkedChannelValue={this.state.isChannelTypeChecked[6].value} onChangeChannelType={this.props.onChangeChannelType}></CheckBox>\r\n                    <CheckBox label=\"Landing Page\" itemType=\"channel\" checkedChannelValue={this.state.isChannelTypeChecked[7].value} onChangeChannelType={this.props.onChangeChannelType}></CheckBox>\r\n                </div>\r\n                <h4>TRACKING OPTIONS</h4>\r\n                <label>Attribution Type</label>\r\n                <div className=\"flex-container-channel\">\r\n                    <CheckBox label=\"Visits\" itemType=\"attribution\" checkedChannelValue={this.state.isTrackingOptionChecked[0].value} onChangeChannelType={this.props.onChangeChannelType}></CheckBox>\r\n                    <CheckBox label=\"Transactions\" itemType=\"attribution\" checkedChannelValue={this.state.isTrackingOptionChecked[1].value} onChangeChannelType={this.props.onChangeChannelType}></CheckBox>\r\n                </div>\r\n                <footer>\r\n                    <button className='ui primary right floated button' onClick={this.gotoNextStep}>Next ></button>\r\n                </footer>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default StepOne;"]},"metadata":{},"sourceType":"module"}