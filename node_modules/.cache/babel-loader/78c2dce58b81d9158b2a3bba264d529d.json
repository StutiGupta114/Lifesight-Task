{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sgstu\\\\multi-step-form_assignment\\\\src\\\\components\\\\MainStep.jsx\";\nimport React from 'react';\nimport StepOne from './StepOne';\nimport StepTwo from './StepTwo';\n\nclass MainStep extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.showStepDetails = () => {\n      const _this$state = this.state,\n            step = _this$state.step,\n            channel = _this$state.channel,\n            channelType = _this$state.channelType,\n            trackingOption = _this$state.trackingOption;\n\n      if (step === 1) {\n        return React.createElement(StepOne, {\n          onChangeChannel: this.onChangeChannel,\n          onChangeChannelType: this.onChangeChannelType,\n          nextStep: this.nextStep,\n          channel: channel,\n          channelType: channelType,\n          trackingOption: trackingOption,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24\n          },\n          __self: this\n        });\n      }\n\n      if (step === 2) {\n        return React.createElement(StepTwo, {\n          setStartDate: this.setStartDate,\n          startDate: this.state.startDate,\n          setEndDate: this.setEndDate,\n          endDate: this.state.endDate,\n          nextStep: this.nextStep,\n          prevStep: this.prevStep,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34\n          },\n          __self: this\n        });\n      }\n    };\n\n    this.nextStep = () => {\n      const step = this.state.step;\n      this.setState({\n        step: step + 1\n      });\n      console.log(this.state);\n    };\n\n    this.prevStep = () => {\n      const step = this.state.step;\n      this.setState({\n        step: step - 1\n      });\n    };\n\n    this.onChangeChannel = event => {\n      console.log(event.target.id);\n      this.setState({\n        channel: event.target.id\n      });\n    };\n\n    this.onChangeChannelType = event => {\n      if (event.target.checked) {\n        this.state.channelType.map(element => {\n          console.log(element);\n\n          if (element.type === event.target.name) {\n            console.loh(\"here\"); //    this.setState({value : true}, () =>{\n            //        console.log(key);\n            //        console.log(value);\n            //    })\n          }\n        }); //event.target.id === 'channel' ? \n        //this.setState() : \n        //this.setState({trackingOption:[...this.state.trackingOption, event.target.name]});\n      } else {\n        if (event.target.id === 'channel') {//var index = this.stepOneObject.channelType.indexOf(event.target.name);\n          //if (index !== -1) this.stepOneObject.channelType.splice(index, 1);\n        } else {//index = this.stepOneObject.trackingOption.indexOf(event.target.name);\n            //if (index !== -1) this.stepOneObject.trackingOption.splice(index, 1);\n          }\n      }\n    };\n\n    this.setStartDate = e => this.setState({\n      startDate: e\n    });\n\n    this.setEndDate = e => this.setState({\n      endDate: e\n    });\n\n    this.state = {\n      step: 1,\n      //for step one\n      channel: null,\n      channelType: [{\n        type: 'In App',\n        value: false\n      }, {\n        key: 'Mobile Web',\n        value: false\n      }, {\n        key: 'Desktop',\n        value: false\n      }, {\n        'Social Media': false\n      }],\n      trackingOption: [],\n      //for step two\n      startDate: '',\n      endDate: ''\n    };\n  }\n\n  render() {\n    const step = this.state.step;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"Main File\", React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"Step \", step), this.showStepDetails());\n  }\n\n}\n\nexport default MainStep;","map":{"version":3,"sources":["C:/Users/sgstu/multi-step-form_assignment/src/components/MainStep.jsx"],"names":["React","StepOne","StepTwo","MainStep","Component","constructor","props","showStepDetails","state","step","channel","channelType","trackingOption","onChangeChannel","onChangeChannelType","nextStep","setStartDate","startDate","setEndDate","endDate","prevStep","setState","console","log","event","target","id","checked","map","element","type","name","loh","e","value","key","render"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport StepOne from './StepOne';\r\nimport StepTwo from './StepTwo';\r\n\r\nclass MainStep extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n        step: 1,\r\n        //for step one\r\n        channel: null,\r\n        channelType: [{type : 'In App', value : false}, {key : 'Mobile Web', value : false}, {key: 'Desktop', value : false}, {'Social Media' : false} ],\r\n        trackingOption: [],\r\n        //for step two\r\n        startDate: '',\r\n        endDate: ''\r\n    }\r\n}\r\n\r\n    showStepDetails = () => {\r\n        const { step, channel, channelType, trackingOption } = this.state;\r\n        if (step === 1) {\r\n            return <StepOne  onChangeChannel = {this.onChangeChannel} \r\n                             onChangeChannelType = {this.onChangeChannelType}\r\n                             nextStep = {this.nextStep}\r\n                             channel = {channel}\r\n                             channelType = {channelType}\r\n                             trackingOption = {trackingOption}\r\n                             />\r\n        }\r\n\r\n        if(step === 2){\r\n            return <StepTwo setStartDate = {this.setStartDate} \r\n                            startDate = {this.state.startDate}\r\n                            setEndDate = {this.setEndDate}\r\n                            endDate = {this.state.endDate}\r\n                            nextStep = {this.nextStep}\r\n                            prevStep = {this.prevStep} />\r\n        }\r\n    }\r\n\r\n    nextStep = () =>{\r\n        const {step} = this.state;\r\n        this.setState({step : step + 1});\r\n        console.log(this.state);\r\n    }\r\n\r\n    prevStep = () =>{\r\n        const {step} = this.state;\r\n        this.setState({step : step - 1});\r\n    }\r\n\r\n    onChangeChannel = (event) => {\r\n        console.log(event.target.id);\r\n        this.setState({channel: event.target.id});\r\n    }\r\n\r\n    onChangeChannelType = (event) => {\r\n        if (event.target.checked) {\r\n            this.state.channelType.map((element) => {\r\n                console.log(element)\r\n                if (element.type === event.target.name){\r\n                    console.loh(\"here\");\r\n                //    this.setState({value : true}, () =>{\r\n                //        console.log(key);\r\n                //        console.log(value);\r\n                //    })\r\n                }\r\n                    \r\n            });\r\n            //event.target.id === 'channel' ? \r\n            //this.setState() : \r\n            //this.setState({trackingOption:[...this.state.trackingOption, event.target.name]});\r\n        }\r\n        else {\r\n            if (event.target.id === 'channel') {\r\n                //var index = this.stepOneObject.channelType.indexOf(event.target.name);\r\n                //if (index !== -1) this.stepOneObject.channelType.splice(index, 1);\r\n            }\r\n            else{\r\n                //index = this.stepOneObject.trackingOption.indexOf(event.target.name);\r\n                //if (index !== -1) this.stepOneObject.trackingOption.splice(index, 1);\r\n            }\r\n        }\r\n    }\r\n\r\n    setStartDate = (e) => this.setState({startDate : e})\r\n\r\n    setEndDate = (e) => this.setState({endDate : e})\r\n\r\n    render() {\r\n        const { step } = this.state;\r\n        return (\r\n            <div>\r\n                Main File\r\n                <h2>Step {step}</h2>\r\n                {this.showStepDetails()}\r\n            </div>\r\n        );\r\n    };\r\n}\r\n\r\nexport default MainStep;"]},"metadata":{},"sourceType":"module"}