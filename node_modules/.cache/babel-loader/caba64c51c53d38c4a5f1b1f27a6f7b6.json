{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sgstu\\\\multi-step-form_assignment\\\\src\\\\components\\\\MainStep.jsx\";\nimport React from 'react';\nimport StepOne from './StepOne';\nimport StepTwo from './StepTwo';\n\nclass MainStep extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.showStepDetails = () => {\n      const step = this.state.step;\n\n      if (step === 1) {\n        return React.createElement(StepOne, {\n          onChangeChannel: this.onChangeChannel,\n          onChangeChannelType: this.onChangeChannelType,\n          nextStep: this.nextStep,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24\n          },\n          __self: this\n        });\n      }\n\n      if (step === 2) {\n        return React.createElement(StepTwo, {\n          setStartDate: this.setStartDate,\n          startDate: this.state.startDate,\n          nextStep: this.nextStep,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30\n          },\n          __self: this\n        });\n      }\n    };\n\n    this.nextStep = () => {\n      const step = this.state.step;\n      this.setState({\n        step: step + 1\n      });\n      console.log(this.state);\n    };\n\n    this.prevStep = () => {\n      const step = this.state.step;\n      this.setState({\n        step: step - 1\n      });\n    };\n\n    this.onChangeChannel = event => {\n      console.log(event.target.id);\n      this.setState({\n        channel: event.target.id\n      });\n    };\n\n    this.onChangeChannelType = event => {\n      if (event.target.checked) {\n        event.target.id === 'channel' ? this.setState({\n          channelType: [...this.state.channelType, event.target.name]\n        }) : this.setState({\n          trackingOption: [...this.state.trackingOption, event.target.name]\n        });\n      } else {\n        if (event.target.id === 'channel') {//var index = this.stepOneObject.channelType.indexOf(event.target.name);\n          //if (index !== -1) this.stepOneObject.channelType.splice(index, 1);\n        } else {//index = this.stepOneObject.trackingOption.indexOf(event.target.name);\n            //if (index !== -1) this.stepOneObject.trackingOption.splice(index, 1);\n          }\n      }\n    };\n\n    this.setStartDate = event => {\n      console.log(event.target.value);\n    };\n\n    this.state = {\n      step: 1,\n      //for step one\n      channel: null,\n      channelType: [],\n      trackingOption: [],\n      //for step two\n      startDate: '',\n      endDate: ''\n    };\n  }\n\n  render() {\n    const step = this.state.step;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Main File\", React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"Step \", step), this.showStepDetails());\n  }\n\n}\n\nexport default MainStep;","map":{"version":3,"sources":["C:/Users/sgstu/multi-step-form_assignment/src/components/MainStep.jsx"],"names":["React","StepOne","StepTwo","MainStep","Component","constructor","props","showStepDetails","step","state","onChangeChannel","onChangeChannelType","nextStep","setStartDate","startDate","setState","console","log","prevStep","event","target","id","channel","checked","channelType","name","trackingOption","value","endDate","render"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport StepOne from './StepOne';\r\nimport StepTwo from './StepTwo';\r\n\r\nclass MainStep extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n        step: 1,\r\n        //for step one\r\n        channel: null,\r\n        channelType: [],\r\n        trackingOption: [],\r\n        //for step two\r\n        startDate: '',\r\n        endDate: ''\r\n    }\r\n}\r\n\r\n    showStepDetails = () => {\r\n        const { step } = this.state;\r\n        if (step === 1) {\r\n            return <StepOne  onChangeChannel = {this.onChangeChannel} \r\n                             onChangeChannelType = {this.onChangeChannelType}\r\n                             nextStep = {this.nextStep}/>\r\n        }\r\n\r\n        if(step === 2){\r\n            return <StepTwo setStartDate = {this.setStartDate} \r\n                            startDate = {this.state.startDate}\r\n                            nextStep = {this.nextStep} />\r\n        }\r\n    }\r\n\r\n    nextStep = () =>{\r\n        const {step} = this.state;\r\n        this.setState({step : step + 1});\r\n        console.log(this.state);\r\n    }\r\n\r\n    prevStep = () =>{\r\n        const {step} = this.state;\r\n        this.setState({step : step - 1});\r\n    }\r\n\r\n    onChangeChannel = (event) => {\r\n        console.log(event.target.id);\r\n        this.setState({channel: event.target.id});\r\n    }\r\n\r\n    onChangeChannelType = (event) => {\r\n        if (event.target.checked) {\r\n            event.target.id === 'channel' ? \r\n            this.setState({channelType: [...this.state.channelType, event.target.name]}) : \r\n            this.setState({trackingOption:[...this.state.trackingOption, event.target.name]});\r\n        }\r\n        else {\r\n            if (event.target.id === 'channel') {\r\n                //var index = this.stepOneObject.channelType.indexOf(event.target.name);\r\n                //if (index !== -1) this.stepOneObject.channelType.splice(index, 1);\r\n            }\r\n            else{\r\n                //index = this.stepOneObject.trackingOption.indexOf(event.target.name);\r\n                //if (index !== -1) this.stepOneObject.trackingOption.splice(index, 1);\r\n            }\r\n        }\r\n    }\r\n\r\n    setStartDate = (event) => {\r\n        console.log(event.target.value);\r\n    }\r\n\r\n    render() {\r\n        const { step } = this.state;\r\n        return (\r\n            <div>\r\n                Main File\r\n                <h2>Step {step}</h2>\r\n                {this.showStepDetails()}\r\n            </div>\r\n        );\r\n    };\r\n}\r\n\r\nexport default MainStep;"]},"metadata":{},"sourceType":"module"}