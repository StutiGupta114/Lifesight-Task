{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sgstu\\\\multi-step-form_assignment\\\\src\\\\components\\\\ChannelType.jsx\";\nimport React from 'react';\nimport '../Style/StepOne.css';\nimport PhoneIphoneIcon from '@material-ui/icons/PhoneIphone';\nimport DesktopWindowsIcon from '@material-ui/icons/DesktopWindows';\nimport TvIcon from '@material-ui/icons/Tv';\nimport RadioIcon from '@material-ui/icons/Radio';\n\nclass ChannelType extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.selectedItem = event => {\n      console.log(event.target);\n      if (event.target.style.backgroundColor === 'rgb(43, 96, 222)') event.target.style.backgroundColor = 'white';else event.target.style.backgroundColor = '#2B60DE';\n      this.props.onChangeChannel(event);\n    };\n\n    this.setDisplayIcon = type => {\n      if (type === 'digital') return React.createElement(PhoneIphoneIcon, {\n        color: \"primary\",\n        style: {\n          fontSize: 60,\n          display: 'inline-block'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      });else if (type === 'OutOfHome') return React.createElement(DesktopWindowsIcon, {\n        color: \"primary\",\n        style: {\n          fontSize: 60,\n          display: 'inline-block'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      });else if (type === 'tv') return React.createElement(TvIcon, {\n        color: \"disabled\",\n        style: {\n          fontSize: 60,\n          display: 'inline-block'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      });else if (type === 'radio') return React.createElement(RadioIcon, {\n        color: \"disabled\",\n        style: {\n          fontSize: 60,\n          display: 'inline-block'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      id: this.props.text,\n      style: {\n        textAlign: \"center\"\n      },\n      onClick: selectedItem,\n      on: checkSelectedChannel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, setDisplayIcon(this.props.iconType), React.createElement(\"label\", {\n      style: {\n        display: 'inline-block',\n        paddingTop: 15\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, this.props.text));\n  }\n\n}\n\nexport default ChannelType;","map":{"version":3,"sources":["C:/Users/sgstu/multi-step-form_assignment/src/components/ChannelType.jsx"],"names":["React","PhoneIphoneIcon","DesktopWindowsIcon","TvIcon","RadioIcon","ChannelType","Component","selectedItem","event","console","log","target","style","backgroundColor","props","onChangeChannel","setDisplayIcon","type","fontSize","display","render","text","textAlign","checkSelectedChannel","iconType","paddingTop"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,sBAAP;AACA,OAAOC,eAAP,MAA4B,gCAA5B;AACA,OAAOC,kBAAP,MAA+B,mCAA/B;AACA,OAAOC,MAAP,MAAmB,uBAAnB;AACA,OAAOC,SAAP,MAAsB,0BAAtB;;AAEA,MAAMC,WAAN,SAA0BL,KAAK,CAACM,SAAhC,CAA0C;AAAA;AAAA;;AAAA,SAEtCC,YAFsC,GAEtBC,KAAD,IAAU;AACrBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,MAAlB;AACA,UAAGH,KAAK,CAACG,MAAN,CAAaC,KAAb,CAAmBC,eAAnB,KAAuC,kBAA1C,EACIL,KAAK,CAACG,MAAN,CAAaC,KAAb,CAAmBC,eAAnB,GAAqC,OAArC,CADJ,KAGIL,KAAK,CAACG,MAAN,CAAaC,KAAb,CAAmBC,eAAnB,GAAqC,SAArC;AACJ,WAAKC,KAAL,CAAWC,eAAX,CAA2BP,KAA3B;AACH,KATqC;;AAAA,SAWtCQ,cAXsC,GAWpBC,IAAD,IAAU;AACvB,UAAIA,IAAI,KAAK,SAAb,EACI,OAAO,oBAAC,eAAD;AAAiB,QAAA,KAAK,EAAG,SAAzB;AAAmC,QAAA,KAAK,EAAE;AAAEC,UAAAA,QAAQ,EAAE,EAAZ;AAAgBC,UAAAA,OAAO,EAAE;AAAzB,SAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP,CADJ,KAEK,IAAIF,IAAI,KAAK,WAAb,EACD,OAAO,oBAAC,kBAAD;AAAoB,QAAA,KAAK,EAAG,SAA5B;AAAsC,QAAA,KAAK,EAAE;AAAEC,UAAAA,QAAQ,EAAE,EAAZ;AAAgBC,UAAAA,OAAO,EAAE;AAAzB,SAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP,CADC,KAEA,IAAIF,IAAI,KAAK,IAAb,EACD,OAAO,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAG,UAAhB;AAA2B,QAAA,KAAK,EAAE;AAAEC,UAAAA,QAAQ,EAAE,EAAZ;AAAgBC,UAAAA,OAAO,EAAE;AAAzB,SAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP,CADC,KAEA,IAAIF,IAAI,KAAK,OAAb,EACD,OAAO,oBAAC,SAAD;AAAW,QAAA,KAAK,EAAG,UAAnB;AAA8B,QAAA,KAAK,EAAE;AAAEC,UAAAA,QAAQ,EAAE,EAAZ;AAAgBC,UAAAA,OAAO,EAAE;AAAzB,SAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACP,KApBqC;AAAA;;AAsBtCC,EAAAA,MAAM,GAAE;AACJ,WACI;AAAK,MAAA,EAAE,EAAE,KAAKN,KAAL,CAAWO,IAApB;AAA0B,MAAA,KAAK,EAAE;AAAEC,QAAAA,SAAS,EAAE;AAAb,OAAjC;AAA0D,MAAA,OAAO,EAAEf,YAAnE;AAAiF,MAAA,EAAE,EAAEgB,oBAArF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKP,cAAc,CAAC,KAAKF,KAAL,CAAWU,QAAZ,CADnB,EAEI;AAAO,MAAA,KAAK,EAAE;AAAEL,QAAAA,OAAO,EAAE,cAAX;AAA2BM,QAAAA,UAAU,EAAE;AAAvC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4D,KAAKX,KAAL,CAAWO,IAAvE,CAFJ,CADJ;AAMH;;AA7BqC;;AAgC1C,eAAehB,WAAf","sourcesContent":["import React from 'react';\r\nimport '../Style/StepOne.css';\r\nimport PhoneIphoneIcon from '@material-ui/icons/PhoneIphone';\r\nimport DesktopWindowsIcon from '@material-ui/icons/DesktopWindows';\r\nimport TvIcon from '@material-ui/icons/Tv';\r\nimport RadioIcon from '@material-ui/icons/Radio';\r\n\r\nclass ChannelType extends React.Component {\r\n\r\n    selectedItem = (event) =>{\r\n        console.log(event.target);\r\n        if(event.target.style.backgroundColor === 'rgb(43, 96, 222)')\r\n            event.target.style.backgroundColor = 'white';\r\n        else\r\n            event.target.style.backgroundColor = '#2B60DE';\r\n        this.props.onChangeChannel(event);\r\n    }\r\n\r\n    setDisplayIcon = (type) => {\r\n        if (type === 'digital')\r\n            return <PhoneIphoneIcon color = 'primary' style={{ fontSize: 60, display: 'inline-block' }} />\r\n        else if (type === 'OutOfHome')\r\n            return <DesktopWindowsIcon color = 'primary' style={{ fontSize: 60, display: 'inline-block' }} />\r\n        else if (type === 'tv')\r\n            return <TvIcon color = 'disabled' style={{ fontSize: 60, display: 'inline-block' }} />\r\n        else if (type === 'radio')\r\n            return <RadioIcon color = 'disabled' style={{ fontSize: 60, display: 'inline-block' }} />\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div id={this.props.text} style={{ textAlign: \"center\" }} onClick={selectedItem} on={checkSelectedChannel}>\r\n                {setDisplayIcon(this.props.iconType)}\r\n                <label style={{ display: 'inline-block', paddingTop: 15 }}>{this.props.text}</label>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ChannelType;"]},"metadata":{},"sourceType":"module"}