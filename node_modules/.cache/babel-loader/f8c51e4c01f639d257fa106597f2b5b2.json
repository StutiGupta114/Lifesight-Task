{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sgstu\\\\multi-step-form_assignment\\\\src\\\\components\\\\ChannelType.jsx\";\nimport React from 'react';\nimport '../Style/StepOne.css';\nimport PhoneIphoneIcon from '@material-ui/icons/PhoneIphone';\nimport DesktopWindowsIcon from '@material-ui/icons/DesktopWindows';\nimport TvIcon from '@material-ui/icons/Tv';\nimport RadioIcon from '@material-ui/icons/Radio';\n\nclass ChannelType extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = event => {\n      //console.log(this.props.iconType);\n      console.log('mounted');\n      console.log(this.selectedChannelRef); //if(this.props.iconType === this.props.selectedChannel){\n      //    console.log(event);\n      //this.props.text.style.backgroundColor = '#2B60DE';\n      //}\n    };\n\n    this.selectedItem = event => {\n      //console.log(event.target);\n      if (event.target.style.backgroundColor === 'rgb(43, 96, 222)') event.target.style.backgroundColor = 'white';else event.target.style.backgroundColor = '#2B60DE';\n      this.props.onChangeChannel(event);\n    };\n\n    this.setDisplayIcon = type => {\n      if (type === 'Digital') return React.createElement(PhoneIphoneIcon, {\n        color: \"primary\",\n        style: {\n          fontSize: 60,\n          display: 'inline-block'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      });else if (type === 'OutOfHome') return React.createElement(DesktopWindowsIcon, {\n        color: \"primary\",\n        style: {\n          fontSize: 60,\n          display: 'inline-block'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      });else if (type === 'TV') return React.createElement(TvIcon, {\n        color: \"disabled\",\n        style: {\n          fontSize: 60,\n          display: 'inline-block'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      });else if (type === 'Radio') return React.createElement(RadioIcon, {\n        color: \"disabled\",\n        style: {\n          fontSize: 60,\n          display: 'inline-block'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      });\n    };\n\n    this.selectedChannelRef = React.createRef();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      id: this.props.text,\n      style: {\n        textAlign: \"center\"\n      },\n      onClick: this.selectedItem,\n      ref: this.selectedChannelRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, this.setDisplayIcon(this.props.iconType), React.createElement(\"label\", {\n      style: {\n        display: 'inline-block',\n        paddingTop: 15\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, this.props.text));\n  }\n\n}\n\nexport default ChannelType;","map":{"version":3,"sources":["C:/Users/sgstu/multi-step-form_assignment/src/components/ChannelType.jsx"],"names":["React","PhoneIphoneIcon","DesktopWindowsIcon","TvIcon","RadioIcon","ChannelType","Component","constructor","props","componentDidMount","event","console","log","selectedChannelRef","selectedItem","target","style","backgroundColor","onChangeChannel","setDisplayIcon","type","fontSize","display","createRef","render","text","textAlign","iconType","paddingTop"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport '../Style/StepOne.css';\r\nimport PhoneIphoneIcon from '@material-ui/icons/PhoneIphone';\r\nimport DesktopWindowsIcon from '@material-ui/icons/DesktopWindows';\r\nimport TvIcon from '@material-ui/icons/Tv';\r\nimport RadioIcon from '@material-ui/icons/Radio';\r\n\r\nclass ChannelType extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.selectedChannelRef = React.createRef();\r\n    }\r\n\r\n    componentDidMount = (event) =>{\r\n        //console.log(this.props.iconType);\r\n        console.log('mounted');\r\n        console.log(this.selectedChannelRef);\r\n        //if(this.props.iconType === this.props.selectedChannel){\r\n        //    console.log(event);\r\n            //this.props.text.style.backgroundColor = '#2B60DE';\r\n        //}\r\n    }\r\n\r\n    selectedItem = (event) =>{\r\n        //console.log(event.target);\r\n        if(event.target.style.backgroundColor === 'rgb(43, 96, 222)')\r\n            event.target.style.backgroundColor = 'white';\r\n        else\r\n            event.target.style.backgroundColor = '#2B60DE';\r\n        this.props.onChangeChannel(event);\r\n    }\r\n\r\n    setDisplayIcon = (type) => {\r\n        if (type === 'Digital')\r\n            return <PhoneIphoneIcon color = 'primary' style={{ fontSize: 60, display: 'inline-block' }} />\r\n        else if (type === 'OutOfHome')\r\n            return <DesktopWindowsIcon color = 'primary' style={{ fontSize: 60, display: 'inline-block' }} />\r\n        else if (type === 'TV')\r\n            return <TvIcon color = 'disabled' style={{ fontSize: 60, display: 'inline-block' }} />\r\n        else if (type === 'Radio')\r\n            return <RadioIcon color = 'disabled' style={{ fontSize: 60, display: 'inline-block' }} />\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div id={this.props.text} style={{ textAlign: \"center\" }} onClick={this.selectedItem} ref={this.selectedChannelRef}>\r\n                {this.setDisplayIcon(this.props.iconType) }\r\n                <label style={{ display: 'inline-block', paddingTop: 15 }}>{this.props.text}</label>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ChannelType;"]},"metadata":{},"sourceType":"module"}